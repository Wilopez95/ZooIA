/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clips.integration;
import java.io.File;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.sf.clipsrules.jni.*;
import javax.swing.ListSelectionModel;
/**
 *
 * @author Charlie
 */
public class ClipsInterface extends javax.swing.JFrame {

    /**
     * Creates new form ClipsInterface
     */
    private Environment clips;
    protected CaptureRouter theRouter;
    private String characteristics[];
    private String capabilities[];
    private String appearence[];      
    
    public ClipsInterface() {
        initComponents();
        //initialize option lists
        characteristics = new String[9];
        characteristics[0] = "tiene_pelo";
        characteristics[1] = "tiene_plumas";
        characteristics[2] = "dientes_agudos";
        characteristics[3] = "ojos_al_frente";
        characteristics[4] = "pezunhas";
        characteristics[5] = "garras";
        characteristics[6] = "patas_largas";
        characteristics[7] = "cuello_largo";
        
        capabilities = new String[8];
        capabilities[0] = "vuela";
        capabilities[1] = "vuela_bien";
        capabilities[2] = "no_vuela";
        capabilities[3] = "nada";
        capabilities[4] = "da_leche";
        capabilities[5] = "come_carne";
        capabilities[6] = "pone_huevos";
        capabilities[7] = "rumia";
        
        appearence = new String[5];
        appearence[0] = "color_blanco";
        appearence[1] = "color_leonado";
        appearence[2] = "color_blanco_negro";
        appearence[3] = "manchas_oscuras";
        appearence[4] = "franjas_negras";
        
        //initialize clips
        clips = new Environment();
        theRouter = new CaptureRouter(clips,new String [] { Router.STDOUT, 
                                                       Router.STDERR,
                                                       Router.STDWRN } );
        try {
            clips.load("zoo.clp");
        } catch (CLIPSLoadException ex) {
            Logger.getLogger(ClipsInterface.class.getName()).log(Level.SEVERE, null, ex);
        }             
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        Inputs = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CharList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        ActionList = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        AppearenceList = new javax.swing.JList<>();
        Options = new javax.swing.JPanel();
        Predict = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(2, 0));

        Inputs.setLayout(new java.awt.GridLayout(1, 0));

        CharList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "tiene pelo", "tiene plumas", "dientes agudos", "ojos al frente", "pezunhas", "garras", "patas largas", "cuello largo" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        CharList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        CharList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                CharListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(CharList);

        Inputs.add(jScrollPane1);

        ActionList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "vuela", "vuela bien", "no vuela", "nada", "da leche", "come carne", "pone huevos", "rumia" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ActionList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane2.setViewportView(ActionList);

        Inputs.add(jScrollPane2);

        AppearenceList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "color blanco", "color leonado", "color blanco negro", "manchas oscuras", "franjas negras" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        AppearenceList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane3.setViewportView(AppearenceList);

        Inputs.add(jScrollPane3);

        getContentPane().add(Inputs);

        Options.setLayout(new java.awt.GridLayout(1, 0));

        Predict.setText("Predict");
        Predict.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PredictActionPerformed(evt);
            }
        });
        Options.add(Predict);

        getContentPane().add(Options);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PredictActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PredictActionPerformed
        // TODO add your handling code here:
        try{
            clips.reset();
            ArrayList<String> all_features = new ArrayList();

            //find all the features specified by the user
            for(int index : CharList.getSelectedIndices()){
                all_features.add(characteristics[index]);
            }
            
            for(int index : ActionList.getSelectedIndices()){
                all_features.add(capabilities[index]);
            }
            
            for(int index : AppearenceList.getSelectedIndices()){
                all_features.add(appearence[index]);
            }
            
            for(String feature : all_features){ 
                clips.eval("(assert (" +feature +" s))");
            }
            
            clips.run();
            String animal = theRouter.getOutput();
            System.out.println("Output: " + animal);
            theRouter.clear();
            clips.reset();
            
        }catch(Exception e){
            System.out.println("clips.integration.ClipsInterface.PredictActionPerformed()");
            clips.deleteRouter(theRouter);
        }
    }//GEN-LAST:event_PredictActionPerformed

    private void CharListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_CharListValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_CharListValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClipsInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClipsInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClipsInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClipsInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClipsInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> ActionList;
    private javax.swing.JList<String> AppearenceList;
    private javax.swing.JList<String> CharList;
    private javax.swing.JPanel Inputs;
    private javax.swing.JPanel Options;
    private javax.swing.JButton Predict;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
